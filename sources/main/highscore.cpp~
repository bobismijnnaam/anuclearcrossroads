// File: highscore.cpp
// Author: Bob Rubbens - Knights of the Compiler
// Creation date: 2015-03-22
// Contact: http://plusminos.nl - @broervanlisa - gmail (bobrubbens)

// Public
#include <sstream>
#include <fstream>

// Private
#include "main/highscore.hpp"
#include "nnb/utils/StringHelpers.hpp"

std::vector<std::tuple<std::string, int>> getHighscores() {
	auto raw = nnb::readLines("media/highscores");
	std::vector<std::tuple<std::string, int>> result;
	for (auto line : raw) {
		if (nnb::trim(line).size() > 0) {
			auto entry = nnb::split(line, " ");
			result.push_back(std::make_tuple(entry[0], nnb::stoi(entry[1])));
		}
	}
	return result;
}

void setHighscores(std::vector<std::tuple<std::string, int>> db) {
	std::stringstream ss;
	for (auto entry : db) {
		auto name = std::get<0>(entry);
		auto score = std::get<1>(entry);
		ss << nnb::trim(name) << " " << nnb::trim(score) << "\n";
	}
	auto raw = ss.str();

	std::ofstream highscorefile("media/highscores");
	highscorefile << raw;
}


